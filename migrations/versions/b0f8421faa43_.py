"""empty message

Revision ID: b0f8421faa43
Revises: 
Create Date: 2024-04-14 17:15:04.862859

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = 'b0f8421faa43'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('violation')
    with op.batch_alter_table('owner', schema=None) as batch_op:
        batch_op.alter_column('name',
               existing_type=mysql.VARCHAR(length=45),
               type_=sa.String(length=80),
               nullable=False)
        batch_op.alter_column('address',
               existing_type=mysql.VARCHAR(length=45),
               type_=sa.String(length=200),
               nullable=False)
        batch_op.alter_column('license_no',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=False)
        batch_op.create_unique_constraint(None, ['address'])
        batch_op.create_unique_constraint(None, ['name'])
        batch_op.create_unique_constraint(None, ['license_no'])
        batch_op.drop_column('vehicle_reg_no')

    with op.batch_alter_table('vehicle', schema=None) as batch_op:
        batch_op.add_column(sa.Column('id', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('is_register', sa.Boolean(), nullable=True))
        batch_op.alter_column('vehicle_id',
               existing_type=mysql.INTEGER(display_width=11),
               type_=sa.String(length=100),
               existing_nullable=False)
        batch_op.alter_column('manufacturer',
               existing_type=mysql.VARCHAR(length=45),
               type_=sa.String(length=200),
               nullable=False)
        batch_op.alter_column('model',
               existing_type=mysql.VARCHAR(length=45),
               type_=sa.String(length=100),
               nullable=False)
        batch_op.alter_column('registration_date',
               existing_type=sa.DATE(),
               type_=sa.DateTime(),
               nullable=False)
        batch_op.alter_column('owner_id',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('vehicle', schema=None) as batch_op:
        batch_op.alter_column('owner_id',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=False)
        batch_op.alter_column('registration_date',
               existing_type=sa.DateTime(),
               type_=sa.DATE(),
               nullable=True)
        batch_op.alter_column('model',
               existing_type=sa.String(length=100),
               type_=mysql.VARCHAR(length=45),
               nullable=True)
        batch_op.alter_column('manufacturer',
               existing_type=sa.String(length=200),
               type_=mysql.VARCHAR(length=45),
               nullable=True)
        batch_op.alter_column('vehicle_id',
               existing_type=sa.String(length=100),
               type_=mysql.INTEGER(display_width=11),
               existing_nullable=False)
        batch_op.drop_column('is_register')
        batch_op.drop_column('id')

    with op.batch_alter_table('owner', schema=None) as batch_op:
        batch_op.add_column(sa.Column('vehicle_reg_no', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_constraint(None, type_='unique')
        batch_op.alter_column('license_no',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=True)
        batch_op.alter_column('address',
               existing_type=sa.String(length=200),
               type_=mysql.VARCHAR(length=45),
               nullable=True)
        batch_op.alter_column('name',
               existing_type=sa.String(length=80),
               type_=mysql.VARCHAR(length=45),
               nullable=True)

    op.create_table('violation',
    sa.Column('violation_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False),
    sa.Column('violation_date', sa.DATE(), nullable=True),
    sa.Column('violation_type', mysql.VARCHAR(length=45), nullable=True),
    sa.Column('vehicle_status', mysql.VARCHAR(length=45), nullable=True),
    sa.Column('vehicle_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['vehicle_id'], ['vehicle.vehicle_id'], name='fk_violation_vehicle'),
    sa.PrimaryKeyConstraint('violation_id'),
    mysql_collate='utf8mb4_general_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    # ### end Alembic commands ###
